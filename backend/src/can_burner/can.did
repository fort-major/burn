type GetBurnersRequest = record { take : nat32; start : opt principal };
type GetBurnersResponse = record {
  entries : vec record { principal; nat; nat };
};
type GetTotalsResponse = record {
  total_share_supply : nat;
  total_burners : nat64;
  total_tcycles_burned : nat;
  pos_start_key : opt principal;
  your_share_tcycles : nat;
  pos_round_delay_ns : nat64;
  total_burn_token_minted : nat;
  current_burn_token_reward : nat;
  your_unclaimed_reward_e8s : nat;
  current_pos_round : nat64;
  current_share_fee : nat;
};
type RefundLostTokensRequest = record { kind : RefundTokenKind };
type RefundLostTokensResponse = record { results : vec Result };
type RefundTokenKind = variant { ICP : vec record { blob; nat64 } };
type Result = variant { Ok : nat; Err : text };
service : () -> {
  claim_reward : (principal) -> (Result);
  get_burners : (GetBurnersRequest) -> (GetBurnersResponse) query;
  get_totals : () -> (GetTotalsResponse) query;
  refund_lost_tokens : (RefundLostTokensRequest) -> (RefundLostTokensResponse);
  resume : () -> ();
  stake : (nat64) -> ();
  stop : () -> ();
  subaccount_of : (principal) -> (blob) query;
  withdraw : (nat, principal) -> ();
}
