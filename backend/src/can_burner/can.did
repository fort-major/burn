type ClaimRewardRequest = record { to : principal };
type ClaimRewardResponse = record { result : Result };
type GetBurnersRequest = record { take : nat32; start : opt principal };
type GetBurnersResponse = record {
  entries : vec record { principal; nat; nat; bool; nat64 };
};
type GetTotalsResponse = record {
  total_lottery_participants : nat64;
  your_lottery_eligibility_status : bool;
  total_share_supply : nat;
  your_decide_id_verification_status : bool;
  total_burners : nat64;
  total_tcycles_burned : nat;
  pos_start_key : opt principal;
  your_share_tcycles : nat;
  pos_round_delay_ns : nat64;
  total_burn_token_minted : nat;
  total_verified_accounts : nat64;
  current_burn_token_reward : nat;
  your_unclaimed_reward_e8s : nat;
  is_lottery_enabled : bool;
  current_pos_round : nat64;
  current_share_fee : nat;
};
type RefundLostTokensRequest = record { kind : RefundTokenKind };
type RefundLostTokensResponse = record { results : vec Result };
type RefundTokenKind = variant { ICP : vec record { blob; nat64 } };
type Result = variant { Ok : nat; Err : text };
type StakeRequest = record { qty_e8s_u64 : nat64 };
type VerifyDecideIdRequest = record { jwt : text };
type WithdrawRequest = record { to : principal; qty_e8s : nat };
service : () -> {
  can_migrate_msq_account : () -> (bool) query;
  claim_reward : (ClaimRewardRequest) -> (ClaimRewardResponse);
  decide_id_verified_accounts_count : () -> (nat32) query;
  disable_lottery : () -> ();
  enable_lottery : () -> ();
  get_burners : (GetBurnersRequest) -> (GetBurnersResponse) query;
  get_totals : () -> (GetTotalsResponse) query;
  migrate_msq_account : (ClaimRewardRequest) -> (record {});
  refund_lost_tokens : (RefundLostTokensRequest) -> (RefundLostTokensResponse);
  resume : () -> ();
  stake : (StakeRequest) -> (record {});
  stop : () -> ();
  subaccount_of : (principal) -> (blob) query;
  verify_decide_id : (VerifyDecideIdRequest) -> (record {});
  withdraw : (WithdrawRequest) -> (record {});
}
